import time
from datetime import datetime
import Adafruit_ADS1x15


# _____________Site Specific settings____________________

siteCode = "Richards_Hall"
scanInterval = 1.0
recordInterval = 1.0
maxFlowRate = 500.0
calibrationFactor = 1.0

adc = Adafruit_ADS1x15.ADS1015()

# __________________Gain Settings_________________________

# This setting changes the range of voltages that are read
# See table 3 in the ADS1015/ADS1115 datasheet for more info on gain.
#  - 2/3 = +/-6.144V 1 bit = 3 mV
#  -   1 = +/-4.096V 1 bit = 2 mV
#  -   2 = +/-2.048V 1 bit = 1 mV
#  -   4 = +/-1.024V 1 bit = 0.5 mV
#  -   8 = +/-0.512V 1 bit = 0.25 mV
#  -  16 = +/-0.256V 1 bit = 0.125 mV

Gain = 1
bitConvversion = 2

# ___________________Data Log Output File__________________

localTime = time.localtime(time.time())
outputFilePath = '/home/pi/CampusMeters'
outputFileName = scanInterval + 'sec_datalog_' + siteCode + '_' str(localTime.tm_year) \
                 + '-' + str(localTime.tm_mon) + '-' + str(localTime.tm.mday) \
                 + '_' + str(localTime.tm_hour) + ':' + str(localTime.tm_min) \
                 + ':' + str(localTime.tm_sec) + '.csv'

# .csv file heading
loggerName = '\"Campus Meter Data log for: ' + siteCode + '\"'
print loggerName

dataHeader = '\"Date\",\"RecordNumber\",\"SensorVoltage\",\"FlowRate\",\"AvgFlowRate\",' \
             '\"IncrementalVol\",\"TotalVol\"'
print dataHeader

# open and write heading to the .csv file
with open(outputFilePath + outputFileName, 'w') as outputFile:
    outputFile.write(loggerName + '\n')
    outputFile.write(dataHeader + '\n')

# _____________________Timing Variables______________________
# Initial set up of timing variables this resets every the code is run.
sampleNumber = 1
currTime = 0.0
prevTime = 0.0
prevRecTime = 0.0
timeInterval = 0.0

# ***(these need to change in order to accommodate milliseconds)***

#now = time.localtime(time.time())
#remainder = recordInterval - (now.tm_sec % recordInterval)
# **** set up a variable for now.tm_sec ****
#time.sleep(remainder)
#previousTime = time.time()
#previousRecordTime = previousTime
now = datetime.utcnow()
millis = (time.time() * 1000)





#______________________Sensor Variables_______________________
# Initial values for sensor variables, these reset every time the code is run
flowPin = 0
resistorValue = 200
minVoltage = (0.004 * resistorValue)
maxVoltage =  (0.02 * resistorValue)
voltageRange = maxVoltage - minVoltage
sensorVoltage = 0.0
flowRate = 0.0
avgFlowRate = 0.0
flowSum = 0.0
sampleCount = 0
scanIntervalVol = 0.0
recordIntervalVol = 0.0

# ______________________Main Program___________________________

while True:

    currTime = datetime.datetime()

    if (currTime - prevTime) >= scanInterval:
        sampleCount += 1

        #format date/time string

        sensorVolts = calibrationFactor * bitConvversion * adc.read_adc(flowPin, gain=GAIN)/1000



